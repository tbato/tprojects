/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package model;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Random;
import javax.swing.Timer;

/**
 *
 * @author ASUS
 */
public class BouncingBall extends javax.swing.JFrame implements ActionListener{

    /**
     * Creates new form BouncingBall
     */
    private static final int WIDTH = 500;
    private  static final int HEIGHT = 500;
    private static final int BALL_SIZE = 50;
    private static final int BALL_DELAY = 10;
    private static final int MAX_SPEED = 5;
    
    private  int ballX = WIDTH/2 - BALL_SIZE/2;
    private  int ballY = HEIGHT/2 - BALL_SIZE/2;
    
    private int ballXSpeed;
    private int ballYSpeed; 
    
    
    
    
    public BouncingBall() {
        initComponents();
        setSize(WIDTH, HEIGHT);
        setLocationRelativeTo(null);
        setResizable(false);
        Timer timer = new Timer(BALL_DELAY, this);
        timer.start();
        generateRandomSpeed();
    }
    
     private void generateRandomSpeed()
    {
        Random random = new Random();
        ballXSpeed = random.nextInt(MAX_SPEED * 2 + 1) - MAX_SPEED;
        ballYSpeed = random.nextInt(MAX_SPEED * 2 + 1) - MAX_SPEED;
    }
     
    @Override
    public void paint(Graphics g)
    {
      super.paint(g);
      g.setColor(Color.red);
      g.fillOval(ballX, ballY, BALL_SIZE, BALL_SIZE);
    }

   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setSize(new java.awt.Dimension(500, 500));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 501, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 501, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BouncingBall.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BouncingBall.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BouncingBall.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BouncingBall.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BouncingBall().setVisible(true);
            }
        });
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        
        ballX += ballXSpeed;
        ballY += ballYSpeed;
        
        if(ballX <= 0 || ballX >= WIDTH - BALL_SIZE)
        {
            ballXSpeed *= -1;
        }
        if(ballY <= 0 || ballY >= HEIGHT - BALL_SIZE)
        {
            ballYSpeed *= -1;
        }
        repaint();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
